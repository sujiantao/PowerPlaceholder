// PowerPlaceholder v1.0.0
// (c) sujiantao - http://www.sujiantao.com/
// License: No license, you can use or modify it as you want 
(function (e) { var d = { overlayedClass: "jq-field-overlayed", overlayClass: "jq-field-overlay", directions: ["left", "right", "top", "bottom"] }; function a(n, s, r) { for (var m = 0; m < r.length; m++) { var g = r[m]; try { if (/\*/.test(g)) { for (var k = 0; 4 > k; k++) { var j = g.replace(/\*/g, d.directions[k]), h = n.css(j); s.css(j, h) } } else { s.css(g, n.css(g)) } } catch (f) { } } } function c(f) { f.css("opacity", 1); f.css("filter", ""); f.removeClass(d.overlayedClass) } function b(q, g, l, r) { var m, i, f, s, o, k, j, p, n; if (q.is(":visible")) { q.prop("autocomplete", "off"); n = e.browser.msie ? 0.2 : g.initOpacity; if (l()) { q.css("opacity", n + (r ? g.focusOpacityDiff : 0)); q.addClass(d.overlayedClass); m = q.prev("." + d.overlayClass); if (0 === m.length) { i = q.next("." + g.overlayTextClass).text(); f = q.width(); s = q.height(); m = q.clone().prop("className", d.overlayClass).attr("name", null).attr("id", null).attr("disabled", "disabled").css({ position: "absolute", backgroundColor: "white", color: "black", "-webkit-text-fill-color": "black", opacity: 1, width: f, height: s }); if (m.is("textarea,input")) { m.val(i); a(q, m, ["line-height"]) } else { m.text(i).css("line-height", s + "px").prepend("&nbsp;") } a(q, m, ["font-family", "font-size", "text-align"]); a(q, m, ["border-*-style", "border-*-color", "border-*-width"]); q.css({ zIndex: 1, position: "relative" }); m.insertBefore(q); o = q.offset().top - m.offset().top; if (0 !== o) { k = parseInt(m.css("margin-top"), 10); o = k + o; if (!q.is("textarea")) { o = parseInt(m.prevAll(":visible").eq(0).css("margin-bottom"), 10) + k } m.css("margin-top", o) } j = q.offset().left - m.offset().left; if (0 !== j) { p = parseInt(m.css("margin-left"), 10); m.css("margin-left", p + j) } } } else { q.css("opacity", 1).css("filter", "").removeClass(d.overlayedClass) } } } e.fn.powerPlaceholder = function (f) { var g = e.extend({}, e.fn.powerPlaceholder.defaults, f); return this.each(function () { var h = e(this); h.bind("keydown contextmenu", function () { c(h) }).focus(function () { b(h, g, function () { return "" === h.val() }, true) }).blur(function () { b(h, g, function () { return "" === h.val() }) }).each(function () { b(h, g, function () { return "" === h.val() }) }) }) }; e.fn.powerPlaceholder.defaults = { initOpacity: 0.4, focusOpacityDiff: 0.2, overlayTextClass: "jq-overlay-text" } })(jQuery);